// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DocumentTitlePager component Should render the focused state without crashing 1`] = `
<ClickAwayListener
  onClickAway={[Function]}
>
  <WithStyles(ForwardRef(Typography))
    color="inherit"
    onClick={[Function]}
    style={
      Object {
        "alignItems": "center",
        "cursor": "pointer",
        "display": "flex",
        "margin": "0 2.5em",
        "overflow": "hidden",
      }
    }
    title=""
    variant="h6"
  >
    <div
      style={
        Object {
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        }
      }
    >
       
    </div>
    <form
      onSubmit={[Function]}
    >
      <WithStyles(ForwardRef(TextField))
        InputLabelProps={
          Object {
            "shrink": true,
          }
        }
        inputProps={
          Object {
            "max": -1,
            "min": 1,
            "style": Object {
              "textAlign": "center",
            },
          }
        }
        margin="dense"
        onChange={[Function]}
        required={true}
        style={
          Object {
            "flexShrink": 0,
          }
        }
        title="Goto page"
        type="number"
        value={1}
      />
    </form>
  </WithStyles(ForwardRef(Typography))>
</ClickAwayListener>
`;

exports[`DocumentTitlePager component Should render the unfocused state without crashing 1`] = `
<ClickAwayListener
  onClickAway={[Function]}
>
  <WithStyles(ForwardRef(Typography))
    color="inherit"
    onClick={[Function]}
    style={
      Object {
        "alignItems": "center",
        "cursor": "pointer",
        "display": "flex",
        "margin": "0 2.5em",
        "overflow": "hidden",
      }
    }
    title=""
    variant="h6"
  >
    <div
      style={
        Object {
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        }
      }
    >
       
    </div>
    <div
      style={
        Object {
          "flexShrink": 0,
        }
      }
    >
      1
       / 
      -1
    </div>
  </WithStyles(ForwardRef(Typography))>
</ClickAwayListener>
`;
