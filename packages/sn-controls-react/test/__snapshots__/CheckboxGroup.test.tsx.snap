// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check box group field control in edit/new view should set all the props 1`] = `
<Component
  actionName="edit"
  fieldValue="0"
  settings={
    Object {
      "Compulsory": false,
      "DefaultValue": "0",
      "Description": "It shows the versioning mode of the current content.",
      "DisplayName": "Versioning Mode For Current Content",
      "FieldClassName": "SenseNet.ContentRepository.Fields.VersioningModeField",
      "Name": "VersioningMode",
      "Options": Array [
        Object {
          "Enabled": true,
          "Selected": true,
          "Text": "Inherited",
          "Value": "0",
        },
        Object {
          "Enabled": true,
          "Selected": false,
          "Text": "None",
          "Value": "1",
        },
        Object {
          "Enabled": true,
          "Selected": false,
          "Text": "Major only",
          "Value": "2",
        },
        Object {
          "Enabled": true,
          "Selected": false,
          "Text": "Major and minor",
          "Value": "3",
        },
      ],
      "ReadOnly": true,
      "Type": "ChoiceFieldSetting",
    }
  }
>
  <WithStyles(ForwardRef(FormControl))
    component="fieldset"
    disabled={true}
    required={false}
  >
    <ForwardRef(FormControl)
      classes={
        Object {
          "fullWidth": "MuiFormControl-fullWidth",
          "marginDense": "MuiFormControl-marginDense",
          "marginNormal": "MuiFormControl-marginNormal",
          "root": "MuiFormControl-root",
        }
      }
      component="fieldset"
      disabled={true}
      required={false}
    >
      <fieldset
        className="MuiFormControl-root"
      >
        <WithStyles(ForwardRef(FormLabel))
          component="legend"
        >
          <ForwardRef(FormLabel)
            classes={
              Object {
                "asterisk": "MuiFormLabel-asterisk",
                "disabled": "Mui-disabled",
                "error": "Mui-error",
                "filled": "MuiFormLabel-filled",
                "focused": "Mui-focused",
                "required": "Mui-required",
                "root": "MuiFormLabel-root",
              }
            }
            component="legend"
          >
            <legend
              className="MuiFormLabel-root Mui-disabled"
            >
              Versioning Mode For Current Content
            </legend>
          </ForwardRef(FormLabel)>
        </WithStyles(ForwardRef(FormLabel))>
        <WithStyles(ForwardRef(FormGroup))>
          <ForwardRef(FormGroup)
            classes={
              Object {
                "root": "MuiFormGroup-root",
                "row": "MuiFormGroup-row",
              }
            }
          >
            <div
              className="MuiFormGroup-root"
            >
              <WithStyles(ForwardRef(FormControlLabel))
                control={
                  <ForwardRef(WithStyles)
                    checked={true}
                    onChange={[Function]}
                    value="0"
                  />
                }
                key="0"
                label="Inherited"
              >
                <ForwardRef(FormControlLabel)
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "label": "MuiFormControlLabel-label",
                      "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                      "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                      "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                      "root": "MuiFormControlLabel-root",
                    }
                  }
                  control={
                    <ForwardRef(WithStyles)
                      checked={true}
                      onChange={[Function]}
                      value="0"
                    />
                  }
                  label="Inherited"
                >
                  <label
                    className="MuiFormControlLabel-root Mui-disabled"
                  >
                    <WithStyles(ForwardRef(Checkbox))
                      checked={true}
                      disabled={true}
                      onChange={[Function]}
                      value="0"
                    >
                      <ForwardRef(Checkbox)
                        checked={true}
                        classes={
                          Object {
                            "checked": "Mui-checked",
                            "colorPrimary": "MuiCheckbox-colorPrimary",
                            "colorSecondary": "MuiCheckbox-colorSecondary",
                            "disabled": "Mui-disabled",
                            "indeterminate": "MuiCheckbox-indeterminate",
                            "root": "MuiCheckbox-root",
                          }
                        }
                        disabled={true}
                        onChange={[Function]}
                        value="0"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={true}
                          checkedIcon={<Memo(CheckBoxIcon) />}
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "disabled": "Mui-disabled",
                              "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                            }
                          }
                          color="secondary"
                          disabled={true}
                          icon={<Memo(CheckBoxOutlineBlankIcon) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                          value="0"
                        >
                          <ForwardRef(SwitchBase)
                            checked={true}
                            checkedIcon={<Memo(CheckBoxIcon) />}
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-27 Mui-checked",
                                "disabled": "PrivateSwitchBase-disabled-28 Mui-disabled",
                                "input": "PrivateSwitchBase-input-29",
                                "root": "PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary",
                              }
                            }
                            color="secondary"
                            disabled={true}
                            icon={<Memo(CheckBoxOutlineBlankIcon) />}
                            inputProps={
                              Object {
                                "data-indeterminate": false,
                              }
                            }
                            onChange={[Function]}
                            type="checkbox"
                            value="0"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-27 Mui-checked PrivateSwitchBase-disabled-28 Mui-disabled"
                              color="secondary"
                              component="span"
                              disabled={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-27 Mui-checked PrivateSwitchBase-disabled-28 Mui-disabled"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                color="secondary"
                                component="span"
                                disabled={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-27 Mui-checked PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                  component="span"
                                  disabled={true}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-27 Mui-checked PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disabled={true}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={true}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-checked-27 Mui-checked PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled Mui-disabled"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={-1}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          checked={true}
                                          className="PrivateSwitchBase-input-29"
                                          data-indeterminate={false}
                                          disabled={true}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value="0"
                                        />
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                      </ForwardRef(Checkbox)>
                    </WithStyles(ForwardRef(Checkbox))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiFormControlLabel-label Mui-disabled"
                      component="span"
                    >
                      <ForwardRef(Typography)
                        className="MuiFormControlLabel-label Mui-disabled"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                      >
                        <span
                          className="MuiTypography-root MuiFormControlLabel-label Mui-disabled MuiTypography-body1"
                        >
                          Inherited
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </label>
                </ForwardRef(FormControlLabel)>
              </WithStyles(ForwardRef(FormControlLabel))>
              <WithStyles(ForwardRef(FormControlLabel))
                control={
                  <ForwardRef(WithStyles)
                    checked={false}
                    onChange={[Function]}
                    value="1"
                  />
                }
                key="1"
                label="None"
              >
                <ForwardRef(FormControlLabel)
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "label": "MuiFormControlLabel-label",
                      "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                      "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                      "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                      "root": "MuiFormControlLabel-root",
                    }
                  }
                  control={
                    <ForwardRef(WithStyles)
                      checked={false}
                      onChange={[Function]}
                      value="1"
                    />
                  }
                  label="None"
                >
                  <label
                    className="MuiFormControlLabel-root Mui-disabled"
                  >
                    <WithStyles(ForwardRef(Checkbox))
                      checked={false}
                      disabled={true}
                      onChange={[Function]}
                      value="1"
                    >
                      <ForwardRef(Checkbox)
                        checked={false}
                        classes={
                          Object {
                            "checked": "Mui-checked",
                            "colorPrimary": "MuiCheckbox-colorPrimary",
                            "colorSecondary": "MuiCheckbox-colorSecondary",
                            "disabled": "Mui-disabled",
                            "indeterminate": "MuiCheckbox-indeterminate",
                            "root": "MuiCheckbox-root",
                          }
                        }
                        disabled={true}
                        onChange={[Function]}
                        value="1"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={<Memo(CheckBoxIcon) />}
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "disabled": "Mui-disabled",
                              "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                            }
                          }
                          color="secondary"
                          disabled={true}
                          icon={<Memo(CheckBoxOutlineBlankIcon) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                          value="1"
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={<Memo(CheckBoxIcon) />}
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-27 Mui-checked",
                                "disabled": "PrivateSwitchBase-disabled-28 Mui-disabled",
                                "input": "PrivateSwitchBase-input-29",
                                "root": "PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary",
                              }
                            }
                            color="secondary"
                            disabled={true}
                            icon={<Memo(CheckBoxOutlineBlankIcon) />}
                            inputProps={
                              Object {
                                "data-indeterminate": false,
                              }
                            }
                            onChange={[Function]}
                            type="checkbox"
                            value="1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled"
                              color="secondary"
                              component="span"
                              disabled={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                color="secondary"
                                component="span"
                                disabled={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                  component="span"
                                  disabled={true}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disabled={true}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={true}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled Mui-disabled"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={-1}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          checked={false}
                                          className="PrivateSwitchBase-input-29"
                                          data-indeterminate={false}
                                          disabled={true}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value="1"
                                        />
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                      </ForwardRef(Checkbox)>
                    </WithStyles(ForwardRef(Checkbox))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiFormControlLabel-label Mui-disabled"
                      component="span"
                    >
                      <ForwardRef(Typography)
                        className="MuiFormControlLabel-label Mui-disabled"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                      >
                        <span
                          className="MuiTypography-root MuiFormControlLabel-label Mui-disabled MuiTypography-body1"
                        >
                          None
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </label>
                </ForwardRef(FormControlLabel)>
              </WithStyles(ForwardRef(FormControlLabel))>
              <WithStyles(ForwardRef(FormControlLabel))
                control={
                  <ForwardRef(WithStyles)
                    checked={false}
                    onChange={[Function]}
                    value="2"
                  />
                }
                key="2"
                label="Major only"
              >
                <ForwardRef(FormControlLabel)
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "label": "MuiFormControlLabel-label",
                      "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                      "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                      "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                      "root": "MuiFormControlLabel-root",
                    }
                  }
                  control={
                    <ForwardRef(WithStyles)
                      checked={false}
                      onChange={[Function]}
                      value="2"
                    />
                  }
                  label="Major only"
                >
                  <label
                    className="MuiFormControlLabel-root Mui-disabled"
                  >
                    <WithStyles(ForwardRef(Checkbox))
                      checked={false}
                      disabled={true}
                      onChange={[Function]}
                      value="2"
                    >
                      <ForwardRef(Checkbox)
                        checked={false}
                        classes={
                          Object {
                            "checked": "Mui-checked",
                            "colorPrimary": "MuiCheckbox-colorPrimary",
                            "colorSecondary": "MuiCheckbox-colorSecondary",
                            "disabled": "Mui-disabled",
                            "indeterminate": "MuiCheckbox-indeterminate",
                            "root": "MuiCheckbox-root",
                          }
                        }
                        disabled={true}
                        onChange={[Function]}
                        value="2"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={<Memo(CheckBoxIcon) />}
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "disabled": "Mui-disabled",
                              "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                            }
                          }
                          color="secondary"
                          disabled={true}
                          icon={<Memo(CheckBoxOutlineBlankIcon) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                          value="2"
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={<Memo(CheckBoxIcon) />}
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-27 Mui-checked",
                                "disabled": "PrivateSwitchBase-disabled-28 Mui-disabled",
                                "input": "PrivateSwitchBase-input-29",
                                "root": "PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary",
                              }
                            }
                            color="secondary"
                            disabled={true}
                            icon={<Memo(CheckBoxOutlineBlankIcon) />}
                            inputProps={
                              Object {
                                "data-indeterminate": false,
                              }
                            }
                            onChange={[Function]}
                            type="checkbox"
                            value="2"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled"
                              color="secondary"
                              component="span"
                              disabled={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                color="secondary"
                                component="span"
                                disabled={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                  component="span"
                                  disabled={true}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disabled={true}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={true}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled Mui-disabled"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={-1}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          checked={false}
                                          className="PrivateSwitchBase-input-29"
                                          data-indeterminate={false}
                                          disabled={true}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value="2"
                                        />
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                      </ForwardRef(Checkbox)>
                    </WithStyles(ForwardRef(Checkbox))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiFormControlLabel-label Mui-disabled"
                      component="span"
                    >
                      <ForwardRef(Typography)
                        className="MuiFormControlLabel-label Mui-disabled"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                      >
                        <span
                          className="MuiTypography-root MuiFormControlLabel-label Mui-disabled MuiTypography-body1"
                        >
                          Major only
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </label>
                </ForwardRef(FormControlLabel)>
              </WithStyles(ForwardRef(FormControlLabel))>
              <WithStyles(ForwardRef(FormControlLabel))
                control={
                  <ForwardRef(WithStyles)
                    checked={false}
                    onChange={[Function]}
                    value="3"
                  />
                }
                key="3"
                label="Major and minor"
              >
                <ForwardRef(FormControlLabel)
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "label": "MuiFormControlLabel-label",
                      "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                      "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                      "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                      "root": "MuiFormControlLabel-root",
                    }
                  }
                  control={
                    <ForwardRef(WithStyles)
                      checked={false}
                      onChange={[Function]}
                      value="3"
                    />
                  }
                  label="Major and minor"
                >
                  <label
                    className="MuiFormControlLabel-root Mui-disabled"
                  >
                    <WithStyles(ForwardRef(Checkbox))
                      checked={false}
                      disabled={true}
                      onChange={[Function]}
                      value="3"
                    >
                      <ForwardRef(Checkbox)
                        checked={false}
                        classes={
                          Object {
                            "checked": "Mui-checked",
                            "colorPrimary": "MuiCheckbox-colorPrimary",
                            "colorSecondary": "MuiCheckbox-colorSecondary",
                            "disabled": "Mui-disabled",
                            "indeterminate": "MuiCheckbox-indeterminate",
                            "root": "MuiCheckbox-root",
                          }
                        }
                        disabled={true}
                        onChange={[Function]}
                        value="3"
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={<Memo(CheckBoxIcon) />}
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "disabled": "Mui-disabled",
                              "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                            }
                          }
                          color="secondary"
                          disabled={true}
                          icon={<Memo(CheckBoxOutlineBlankIcon) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                          value="3"
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={<Memo(CheckBoxIcon) />}
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-27 Mui-checked",
                                "disabled": "PrivateSwitchBase-disabled-28 Mui-disabled",
                                "input": "PrivateSwitchBase-input-29",
                                "root": "PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary",
                              }
                            }
                            color="secondary"
                            disabled={true}
                            icon={<Memo(CheckBoxOutlineBlankIcon) />}
                            inputProps={
                              Object {
                                "data-indeterminate": false,
                              }
                            }
                            onChange={[Function]}
                            type="checkbox"
                            value="3"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled"
                              color="secondary"
                              component="span"
                              disabled={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                color="secondary"
                                component="span"
                                disabled={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                  component="span"
                                  disabled={true}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disabled={true}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={true}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-26 MuiCheckbox-root MuiCheckbox-colorSecondary PrivateSwitchBase-disabled-28 Mui-disabled MuiIconButton-colorSecondary Mui-disabled Mui-disabled"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={-1}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          checked={false}
                                          className="PrivateSwitchBase-input-29"
                                          data-indeterminate={false}
                                          disabled={true}
                                          onChange={[Function]}
                                          type="checkbox"
                                          value="3"
                                        />
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                      </ForwardRef(Checkbox)>
                    </WithStyles(ForwardRef(Checkbox))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiFormControlLabel-label Mui-disabled"
                      component="span"
                    >
                      <ForwardRef(Typography)
                        className="MuiFormControlLabel-label Mui-disabled"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                      >
                        <span
                          className="MuiTypography-root MuiFormControlLabel-label Mui-disabled MuiTypography-body1"
                        >
                          Major and minor
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </label>
                </ForwardRef(FormControlLabel)>
              </WithStyles(ForwardRef(FormControlLabel))>
            </div>
          </ForwardRef(FormGroup)>
        </WithStyles(ForwardRef(FormGroup))>
        <WithStyles(ForwardRef(FormHelperText))>
          <ForwardRef(FormHelperText)
            classes={
              Object {
                "contained": "MuiFormHelperText-contained",
                "disabled": "Mui-disabled",
                "error": "Mui-error",
                "filled": "MuiFormHelperText-filled",
                "focused": "Mui-focused",
                "marginDense": "MuiFormHelperText-marginDense",
                "required": "Mui-required",
                "root": "MuiFormHelperText-root",
              }
            }
          >
            <p
              className="MuiFormHelperText-root Mui-disabled"
            >
              It shows the versioning mode of the current content.
            </p>
          </ForwardRef(FormHelperText)>
        </WithStyles(ForwardRef(FormHelperText))>
      </fieldset>
    </ForwardRef(FormControl)>
  </WithStyles(ForwardRef(FormControl))>
</Component>
`;
